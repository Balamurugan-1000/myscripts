#!/bin/bash

set -e

PROJECT_PATH="$PWD"
PROJECT_NAME="$(basename "$PROJECT_PATH")"
SESSION_NAME="proj_$PROJECT_NAME"

if [ ! -d "env" ]; then
  echo "‚ùå No virtualenv found at ./env"
  exit 2
fi

if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
  echo "üîÅ Attaching to existing tmux session: $SESSION_NAME"
  tmux attach -t "$SESSION_NAME"
  exit 1
fi

echo "üöÄ Creating new tmux session: $SESSION_NAME"

tmux new-session -d -s "$SESSION_NAME" -c "$PROJECT_PATH"

tmux rename-window -t "$SESSION_NAME:1" "code"
tmux send-keys -t "$SESSION_NAME:1" "source env/bin/activate && nvim" C-m

tmux new-window -t "$SESSION_NAME:2" -n "server" -c "$PROJECT_PATH"
tmux send-keys -t "$SESSION_NAME:2.1" "source env/bin/activate && python manage.py runserver 0.0.0.0:8000" C-m
tmux split-window -h -t "$SESSION_NAME:2" -c "$PROJECT_PATH"
tmux send-keys -t "$SESSION_NAME:2.2" "source env/bin/activate" C-m

tmux new-window -t "$SESSION_NAME:3" -n "shell" -c "$PROJECT_PATH"
tmux send-keys -t "$SESSION_NAME:3" "source env/bin/activate && python manage.py shell" C-m

tmux new-window -t "$SESSION_NAME:4" -n "git" -c "$PROJECT_PATH"
tmux send-keys -t "$SESSION_NAME:4" "git status" C-m
tmux new-window -t "$SESSION_NAME:5" -n "utils" -c "$HOME"

tmux select-window -t "$SESSION_NAME:1"

tmux attach -t "$SESSION_NAME"
